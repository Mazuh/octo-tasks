{"version":3,"sources":["services/settings.js","ducks/PomodoroSlice.js","SettingsModal.js","pomodoro.js","services/ToDo.js","ducks/TaskResource.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["initialSettings","pomodoro","shortBreak","longBreak","sound","read","a","serialized","localStorage","getItem","settings","JSON","parse","update","stringify","setItem","initialState","type","time","isRunning","start","config","pomodoroSlice","createSlice","name","reducers","setType","state","action","payload","setTime","setRunning","setStart","setConfig","actions","SettingsModal","props","Modal","show","onHide","setShow","animation","Header","closeButton","Title","Body","initialErrors","SettingsForm","React","useState","setSettings","errors","setErrors","dispatch","useDispatch","useEffect","Object","keys","some","Settings","then","onTimeChangeFn","event","target","value","parseInt","Number","isNaN","Container","Form","className","onSubmit","e","preventDefault","Group","Row","Label","Control","id","placeholder","autoComplete","get","onChange","as","types","Pomodoro","PomodoroClock","remainingSeconds","setRemainingSeconds","useSelector","initialTimestamp","Date","now","countdown","setTimeout","nextRemainingSeconds","Howl","src","play","Push","create","body","tag","icon","timeout","onClick","window","focus","close","clearTimeout","minutes","String","Math","floor","padStart","seconds","document","title","PomodoroActions","currentPause","setCurrentPause","ButtonToolbar","Button","variant","disabled","PomodoroTabs","onClickTypeFn","retrieveTasks","tasks","persistTasks","Promise","resolve","description","existingTasks","task","uuid","uuidv4","trim","isDone","Error","updatingTask","updatedTasks","map","delete","filter","tasksResource","makeReduxAssets","idKey","gateway","ToDo","readMany","tasksActions","App","mappedState","items","error","toast","message","isLoading","length","Wrapper","children","AppHeader","Navbar","expand","Brand","Text","Toggle","aria-controls","Collapse","Nav","Link","href","TaskForm","setDescription","InputGroup","required","Append","TasksList","readAll","onCheckChangeFn","checked","patchTask","onClickDescriptionFn","foundTask","find","it","patch","onClickDelFn","ListGroup","Item","key","Check","size","Flash","Alert","store","configureStore","reducer","pomodoroReducer","tasksReducer","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.919e0520.chunk.js","sourcesContent":["const SETTINGS_KEY = 'octo-settings';\n\nexport const initialSettings = {\n  pomodoro: 25,\n  shortBreak: 5,\n  longBreak: 10,\n  sound: '/assets/notifications-sounds/service-bell_daniel_simion.mp3'\n}\n\nconst retrieveSettings = async () => {\n  const serialized = localStorage.getItem(SETTINGS_KEY);\n  const settings = serialized ? JSON.parse(serialized) : initialSettings;\n  return settings;\n}\n\nconst persistSettings = async settings => {\n  const serialized = JSON.stringify(settings);\n  localStorage.setItem(SETTINGS_KEY, serialized);\n}\n\nexport default {\n  read: retrieveSettings,\n  update: persistSettings,\n};\n","import { createSlice } from '@reduxjs/toolkit';\nimport { initialSettings } from '../services/settings';\n\nconst initialState = {\n  type: 'pomodoro',\n  time: 25,\n  isRunning: false,\n  start: 0,\n  config: initialSettings\n};\n\nconst pomodoroSlice = createSlice({\n  name: 'pomodoro',\n  initialState,\n  reducers: {\n    setType: (state, action) => {\n      state.type = action.payload;\n      state.time = state.config[action.payload];\n      state.start = 0;\n      state.isRunning = false;\n    },\n    setTime: (state, action) => {\n      state.time = action.payload;\n    },\n    setRunning: (state, action) => {\n      state.isRunning = action.payload;\n    },\n    setStart: (state, action) => {\n      state.start = action.payload;\n    },\n    setConfig: (state, action) => {\n      state.config = action.payload;\n    }\n  }\n});\n\nexport const {\n  setType,\n  setTime,\n  setRunning,\n  setStart,\n  setConfig\n} = pomodoroSlice.actions;\n\nexport default pomodoroSlice.reducer;\n","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Container from 'react-bootstrap/Container';\nimport get from 'lodash.get';\nimport Settings from './services/settings';\nimport { setConfig } from './ducks/PomodoroSlice';\nimport { useDispatch } from 'react-redux';\n\nexport default function SettingsModal(props) {\n  return (\n    <Modal show={props.show} onHide={() => props.setShow(false)} animation={false}>\n      <Modal.Header closeButton>\n        <Modal.Title>Settings</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <SettingsForm />\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nconst initialErrors = {\n  pomodoro: '',\n  shortBreak: '',\n  longBreak: ''\n};\n\nconst SettingsForm = () => {\n  const [settings, setSettings] = React.useState(null);\n  const [errors, setErrors] = React.useState(initialErrors);\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    if (settings === null) {\n      return;\n    }\n\n    const hasError = Object.keys(errors).some(name => errors[name]);\n    if (hasError) {\n      return;\n    }\n\n    Settings.update(settings);\n    dispatch(setConfig(settings));\n  }, [settings, errors, dispatch]);\n\n  React.useEffect(() => {\n    Settings.read().then(setSettings);\n  }, [setSettings]);\n\n  const onTimeChangeFn = name => event => {\n    if (name === 'sound') {\n      setSettings({ ...settings, [name]: event.target.value });\n    } else {\n      const value = parseInt(event.target.value, 10);\n      setSettings({ ...settings, [name]: value });\n      if (!event.target.value) {\n        setErrors({...errors, [name]: 'This field is required'});\n      } else if (value <= 0) {\n        setErrors({...errors, [name]: 'Only positive values are allowed'});\n      } else if (Number.isNaN(value)) {\n        setErrors({...errors, [name]: 'Non-integer values are not allowed'});\n      } else {\n        setErrors({...errors, [name]: ''});\n      }\n    }\n  };\n\n  return (\n    <Container>\n      <Form className=\"p-3 mb-4\" onSubmit={e => e.preventDefault()}>\n        <Form.Group>\n          <Row>\n            <Form.Label>Promodoro</Form.Label>\n            <Form.Control\n              id=\"pomodoro\"\n              type=\"number\"\n              className=\"w-100\"\n              placeholder=\"pomodoro\"\n              autoComplete=\"off\"\n              value={get(settings, 'pomodoro', '')}\n              onChange={onTimeChangeFn('pomodoro')}\n            />\n            <span className=\"text-danger\">{errors.pomodoro}</span>\n          </Row>\n        </Form.Group>\n        <Form.Group>\n          <Row>\n            <Form.Label>Short break</Form.Label>\n            <Form.Control\n              id=\"shortbreak\"\n              type=\"number\"\n              className=\"w-100\"\n              placeholder=\"short break\"\n              autoComplete=\"off\"\n              value={get(settings, 'shortBreak', '')}\n              onChange={onTimeChangeFn('shortBreak')}\n            />\n            <span className=\"text-danger\">{errors.shortBreak}</span>\n          </Row>\n        </Form.Group>\n        <Form.Group>\n          <Row>\n            <Form.Label>Long break</Form.Label>\n            <Form.Control\n              id=\"longbreak\"\n              type=\"number\"\n              className=\"w-100\"\n              placeholder=\"long break\"\n              autoComplete=\"off\"\n              value={get(settings, 'longBreak', '')}\n              onChange={onTimeChangeFn('longBreak')}\n            />\n            <span className=\"text-danger\">{errors.longBreak}</span>\n          </Row>\n        </Form.Group>\n        <Form.Group>\n          <Row>\n            <Form.Label>Notification Sound</Form.Label>\n            <Form.Control\n              as=\"select\"\n              value={get(settings, 'sound', '/assets/notifications-sounds/service-bell_daniel_simion.mp3')}\n              onChange={onTimeChangeFn('sound')}\n            >\n              <option value={'/assets/notifications-sounds/service-bell_daniel_simion.mp3'}>Service Bell Help by Daniel Simion</option>\n              <option value={'/assets/notifications-sounds/analog-watch-alarm_daniel-simion.mp3'}>Analog Watch Alarm by Daniel Simion</option>\n              <option value={'/assets/notifications-sounds/Blop-Mark_DiAngelo-79054334.mp3'}>Blop by Mark DiAngelo</option>\n              <option value={'/assets/notifications-sounds/clock-chimes-daniel_simon.mp3'}>Clock Chimes 4x Sound by Daniel Simion</option>\n              <option value={'/assets/notifications-sounds/sms-alert-1-daniel_simon.mp3'}>Text Message Alert 1 by Daniel Simion</option>\n              <option value={'/assets/notifications-sounds/sms-alert-5-daniel_simon.mp3'}>Text Message Alert 5 by Daniel Simion</option>\n            </Form.Control>\n          </Row>\n        </Form.Group>\n      </Form>\n    </Container>\n  );\n};\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\nimport Push from 'push.js';\nimport { Howl } from 'howler';\n\nimport Settings from './services/settings';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  setType,\n  setTime,\n  setRunning,\n  setStart,\n  setConfig\n} from './ducks/PomodoroSlice';\n\nconst types = {\n  pomodoro: 'Pomodoro',\n  shortBreak: 'Short Break',\n  longBreak: 'Long Break' \n}\n\nexport default function Pomodoro() {\n  return (\n    <div className=\"pomorodo__wrapper d-flex flex-column p-3 mt-4 rounded mb-4\">\n      <PomodoroTabs />\n      <PomodoroClock />\n      <PomodoroActions />\n    </div>\n  );\n}\n\nconst PomodoroClock = () => {\n  const [remainingSeconds, setRemainingSeconds] = React.useState(0);\n  const {\n    type,\n    time,\n    isRunning,\n    start,\n    config\n  } = useSelector(state => state.pomodoro);\n\n  React.useEffect(() => {\n    if (start === 0) {\n      const initialTimestamp = Date.now();\n      const end = initialTimestamp + time * 60 * 1000;\n      setRemainingSeconds((end - Date.now() + 1) / 1000);\n    }\n\n    if (!isRunning) {\n      return;\n    }\n    const countdown = setTimeout(() => {\n      const end = start + time * 60 * 1000;\n      const nextRemainingSeconds = (end - Date.now() + 1) / 1000;\n      const sound = new Howl({\n        src: config.sound\n      })\n      if (nextRemainingSeconds >= 0) {\n        setRemainingSeconds(nextRemainingSeconds);\n      } else {\n        sound.play();\n        Push.create(\"Octo-tasks\", {\n          body: `${types[type]} is over!`,\n          tag: 'done',\n          icon:'',\n          timeout: 4000,\n          onClick: () => {\n            window.focus();\n            Push.close();\n          }\n        });   \n      } \n    }, 200);\n\n    return () => clearTimeout(countdown);\n  }, [remainingSeconds, config.sound, isRunning, time, type, start]);\n\n  const minutes = String(Math.floor(remainingSeconds / 60)).padStart(2, 0);\n  const seconds = String(Math.floor(remainingSeconds % 60)).padStart(2, 0);\n  \n\n  React.useEffect(() => {\n    document.title = `${minutes}:${seconds} ${types[type]}`\n  }, [minutes, seconds, type])\n\n  return (\n    <div className=\"pomorodo__time d-flex justify-content-center align-items-center flex-grow-1\">\n      {minutes + ':' + seconds}\n    </div>\n  );\n};\n\nconst PomodoroActions = props => {\n  const [currentPause, setCurrentPause] = React.useState(0);\n  const isRunning = useSelector(state => state.pomodoro.isRunning);\n  const start = useSelector(state => state.pomodoro.start);\n  const dispatch = useDispatch();\n\n  const startTimer = () => {\n    if (start === 0) {\n      dispatch(setStart(Date.now()));\n    } else {\n      dispatch(setStart(start + Date.now() - currentPause));\n    }\n    dispatch(setRunning(true));\n  };\n\n  const pauseTimer = () => {\n    dispatch(setRunning(false));\n    setCurrentPause(Date.now());\n  };\n\n  const resetTimer = () => {\n    dispatch(setStart(0));\n    dispatch(setRunning(false));\n  };\n\n  return (\n    <ButtonToolbar>\n      <Button\n        className=\"ml-auto mr-2\"\n        variant=\"primary\"\n        type=\"button\"\n        disabled={isRunning}\n        onClick={startTimer}\n      >\n        Start\n      </Button>\n      <Button\n        className=\"ml-2 mr-2\"\n        variant=\"danger\"\n        type=\"button\"\n        disabled={!isRunning}\n        onClick={pauseTimer}\n      >\n        Pause\n      </Button>\n      <Button\n        className=\"mr-auto ml-2\"\n        variant=\"secondary\"\n        type=\"button\"\n        onClick={resetTimer}\n      >\n        Reset\n      </Button>\n    </ButtonToolbar>\n  );\n};\n\nconst PomodoroTabs = () => {\n  const type = useSelector(state => state.pomodoro.type);\n  const config = useSelector(state => state.pomodoro.config);\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    Settings.read().then(settings => dispatch(setConfig(settings)));\n  }, [dispatch]);\n\n  const onClickTypeFn = type => () => {\n    dispatch(setType(type));\n  }\n\n  React.useEffect(() => {\n    dispatch(setTime(config[type]));\n  }, [config, type, dispatch]);\n\n  return (\n    <ButtonToolbar className=\"d-none d-md-flex justify-content-around\">\n      <Button\n        className=\"mb-3 col-sm-3\"\n        variant=\"primary\"\n        type=\"button\"\n        disabled={type === 'pomodoro'}\n        onClick={onClickTypeFn('pomodoro')}\n      >\n        Pomodoro\n      </Button>\n      <Button\n        className=\"mb-3 col-sm-3\"\n        variant=\"primary\"\n        type=\"button\"\n        disabled={type === 'shortBreak'}\n        onClick={onClickTypeFn('shortBreak')}\n      >\n        Short Break\n      </Button>\n      <Button\n        className=\"mb-3 col-sm-3\"\n        variant=\"primary\"\n        type=\"button\"\n        disabled={type === 'longBreak'}\n        onClick={onClickTypeFn('longBreak')}\n      >\n        Long Break\n      </Button>\n    </ButtonToolbar>\n  );\n};\n","import { v4 as uuidv4 } from 'uuid';\n\nconst TASKS_KEY = 'tasks';\n\nexport const retrieveTasks = async () => {\n    const serialized = localStorage.getItem(TASKS_KEY);\n    const tasks = serialized ? JSON.parse(serialized) : [];\n    return tasks;\n};\n\nexport const persistTasks = (tasks) => {\n  return new Promise((resolve) => {\n    localStorage.setItem(TASKS_KEY, JSON.stringify(tasks));\n    resolve();\n  });\n}\n\nexport default {\n  create: async (description = '') => {\n    const existingTasks = await retrieveTasks();\n\n    const task = {\n      uuid: uuidv4(),\n      description: description.trim(),\n      isDone: false,\n    };\n\n    if (!task.description) {\n      throw new Error('Description is required.');\n    }\n\n    const tasks = [...existingTasks, task];\n\n    persistTasks(tasks);\n    return task;\n  },\n  read: async () => {\n    return retrieveTasks();\n  },\n  update: async (uuid, updatingTask) => {\n    const existingTasks = await retrieveTasks();\n    const updatedTasks = existingTasks.map(task => task.uuid === uuid\n      ? updatingTask\n      : task\n    );\n    persistTasks(updatedTasks);\n    return updatingTask;\n  },\n  delete: async (uuid) => {\n    const existingTasks = await retrieveTasks();\n    const updatedTasks = existingTasks.filter(task => task.uuid !== uuid);\n    persistTasks(updatedTasks);\n    return { uuid };\n  },\n};\n","import { makeReduxAssets } from 'resource-toolkit';\nimport ToDo from '../services/ToDo';\n\nconst tasksResource = makeReduxAssets({\n  name: 'tasks',\n  idKey: 'uuid',\n  gateway: {\n    create: description => {\n      return ToDo.create(description);\n    },\n    readMany: () => {\n      return ToDo.read();\n    },\n    update: task => {\n      return ToDo.update(task.uuid, task);\n    },\n    delete: task => {\n      return ToDo.delete(task.uuid);\n    }\n  }\n});\n\nexport const tasksActions = tasksResource.actions;\n\nexport default tasksResource.reducer;","import React from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport Container from 'react-bootstrap/Container';\nimport SettingsModal from './SettingsModal';\nimport Nav from 'react-bootstrap/Nav';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Navbar from 'react-bootstrap/Navbar';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Alert from 'react-bootstrap/Alert';\nimport Pomodoro from './pomodoro.js';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setType } from './ducks/PomodoroSlice';\nimport { tasksActions } from './ducks/TaskResource';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\n\nexport default function App() {\n  const state = useSelector(state => state.tasks);\n  const mappedState = {\n    ...state,\n    tasks: state.items\n  };\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    if (state.error) {\n      toast(state.error.message);\n    }\n  }, [state.error]);\n\n  return (\n    <Wrapper>\n      <AppHeader \n        state={mappedState}\n      />\n      <Container id=\"content\" className=\"d-flex flex-column\">\n        <Pomodoro />\n        <TaskForm state={mappedState} dispatch={dispatch} />\n        {!mappedState.isLoading && mappedState.tasks.length === 0 && (\n          <Flash variant=\"light\">No tasks yet.</Flash>\n        )}\n        <TasksList state={mappedState} dispatch={dispatch} />\n        <ToastContainer />\n      </Container>\n    </Wrapper>\n  );\n}\n\nconst Wrapper = ({ children }) => {\n  const type = useSelector(state => state.pomodoro.type);\n  return (\n    <div className={`wrapper wrapper--${type}`}>{children}</div>\n  );\n}\n\nconst AppHeader = ({ state }) => {\n  const [show, setShow] = React.useState(false);\n  const dispatch = useDispatch();\n\n  const onClickTypeFn = type => () => {\n    dispatch(setType(type));\n  }\n\n  return (\n    <Navbar expand=\"lg\" variant=\"dark\">\n      <Container>\n        <SettingsModal\n            setShow={setShow}\n            show={show}\n        />\n        <Navbar.Brand>Octo-tasks</Navbar.Brand>\n          <Navbar.Text>\n            {state.isLoading ? (\n              <small> Loading...</small>\n              ) : (\n              <Button variant=\"primary\" onClick={() => setShow(true)}>\n                Settings\n              </Button>\n              )\n            }\n          </Navbar.Text>\n        <Navbar.Toggle className=\"d-md-none d-sm-fle\" aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"d-md-none d-sm-flex mr-auto \">\n            <Nav.Link onClick={onClickTypeFn('pomodoro')} href=\"#pomodoro\">Pomodoro</Nav.Link>\n            <Nav.Link onClick={onClickTypeFn('shortBreak')} href=\"#shorbreak\">Short Break</Nav.Link>\n            <Nav.Link onClick={onClickTypeFn('longBreak')} href=\"#longbreak\">Long Break</Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n\nconst TaskForm = props => {\n  const [description, setDescription] = React.useState('');\n\n  const onSubmit = event => {\n    event.preventDefault();\n    props.dispatch({ type: 'loading' });\n\n    tasksActions\n      .create(description)(props.dispatch)\n      .then(() => {\n        setDescription('');\n        toast('Task created!');\n      });\n  };\n\n  return (\n    <div className=\"mt-3\">\n      <Form onSubmit={onSubmit} className=\"mb-4\">\n        <InputGroup>\n          <Form.Control\n            name=\"description\"\n            className=\"w-100\"\n            placeholder=\"Type a new task description...\"\n            autoComplete=\"off\"\n            value={description}\n            onChange={event => setDescription(event.target.value)}\n            disabled={props.state.isLoading}\n            required\n          />\n          <InputGroup.Append>\n            <Button\n              variant=\"primary\"\n              type=\"submit\"\n              disabled={props.state.isLoading}\n            >\n              Add\n            </Button>\n          </InputGroup.Append>\n        </InputGroup>\n      </Form>\n    </div>\n  );\n};\n\nconst TasksList = ({ dispatch, ...props }) => {\n  React.useEffect(() => {\n    tasksActions.readAll()(dispatch);\n  }, [dispatch]);\n\n  const onCheckChangeFn = task => event => {\n    const isDone = event.target.checked;\n    patchTask(task, { isDone });\n  };\n\n  const onClickDescriptionFn = task => () => {\n    const foundTask = props.state.tasks.find(it => it.uuid === task.uuid);\n    if (!foundTask) {\n      return;\n    }\n\n    patchTask(task, { isDone: !foundTask.isDone });\n  };\n\n  const patchTask = (task, patch) => {\n    const updatingTask = { ...task, ...patch };\n\n    tasksActions.update(task.uuid, updatingTask)(dispatch);\n  };\n\n  const onClickDelFn = task => () => {\n    tasksActions\n      .delete(\n        task.uuid,\n        task\n      )(dispatch)\n      .then(() => {\n        toast('Task deleted!');\n      });\n  };\n\n  return (\n    <ListGroup className=\"text-dark\">\n      {props.state.tasks.map(task => (\n        <ListGroup.Item key={task.uuid} className=\"d-flex\">\n          <Form.Check\n            onChange={onCheckChangeFn(task)}\n            type=\"checkbox\"\n            checked={task.isDone}\n            disabled={props.isLoading}\n            className=\"cursor-pointer\"\n          />\n          <span className=\"cursor-pointer\" onClick={onClickDescriptionFn(task)}>\n            {task.description}\n          </span>\n          <Button\n            onClick={onClickDelFn(task)}\n            variant=\"danger\"\n            type=\"button\"\n            size=\"sm\"\n            className=\"ml-auto\"\n            disabled={props.state.isLoading}\n          >\n            Del\n          </Button>\n        </ListGroup.Item>\n      ))}\n    </ListGroup>\n  );\n};\n\nconst Flash = props => (\n  <Alert className=\"w-50 ml-auto mr-auto mt-4 text-center\" {...props} />\n);\n","import { configureStore } from '@reduxjs/toolkit';\nimport pomodoroReducer from '../ducks/PomodoroSlice';\nimport tasksReducer from '../ducks/TaskResource';\n\nconst store = configureStore({\n  reducer: {\n    pomodoro: pomodoroReducer,\n    tasks: tasksReducer\n  }\n});\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}